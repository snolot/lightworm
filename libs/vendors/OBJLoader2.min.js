"use strict";void 0===THREE.OBJLoader2&&(THREE.OBJLoader2={}),void 0===THREE.LoaderSupport&&console.error('"THREE.LoaderSupport" is not available. "THREE.OBJLoader2" requires it. Please include "LoaderSupport.js" in your HTML.'),THREE.OBJLoader2=function(){function e(e){console.info("Using THREE.OBJLoader2 version: "+t),this.manager=s.verifyInput(e,THREE.DefaultLoadingManager),this.logging={enabled:!0,debug:!1},this.modelName="",this.instanceNo=0,this.path="",this.useIndices=!1,this.disregardNormals=!1,this.materialPerSmoothingGroup=!1,this.loaderRootNode=new THREE.Group,this.meshBuilder=new THREE.LoaderSupport.MeshBuilder,this.callbacks=new THREE.LoaderSupport.Callbacks,this.workerSupport=new THREE.LoaderSupport.WorkerSupport,this.terminateWorkerOnLoad=!0}var t="2.4.0",s=THREE.LoaderSupport.Validator;e.prototype.setLogging=function(e,t){this.logging.enabled=!0===e,this.logging.debug=!0===t,this.meshBuilder.setLogging(this.logging.enabled,this.logging.debug)},e.prototype.setModelName=function(e){this.modelName=s.verifyInput(e,this.modelName)},e.prototype.setPath=function(e){this.path=s.verifyInput(e,this.path)},e.prototype.setStreamMeshesTo=function(e){this.loaderRootNode=s.verifyInput(e,this.loaderRootNode)},e.prototype.setMaterials=function(e){this.meshBuilder.setMaterials(e)},e.prototype.setUseIndices=function(e){this.useIndices=!0===e},e.prototype.setDisregardNormals=function(e){this.disregardNormals=!0===e},e.prototype.setMaterialPerSmoothingGroup=function(e){this.materialPerSmoothingGroup=!0===e},e.prototype._setCallbacks=function(e){s.isValid(e.onProgress)&&this.callbacks.setCallbackOnProgress(e.onProgress),s.isValid(e.onMeshAlter)&&this.callbacks.setCallbackOnMeshAlter(e.onMeshAlter),s.isValid(e.onLoad)&&this.callbacks.setCallbackOnLoad(e.onLoad),s.isValid(e.onLoadMaterials)&&this.callbacks.setCallbackOnLoadMaterials(e.onLoadMaterials),this.meshBuilder._setCallbacks(this.callbacks)},e.prototype.onProgress=function(e,t,o){var a=s.isValid(t)?t:"",r={detail:{type:e,modelName:this.modelName,instanceNo:this.instanceNo,text:a,numericalValue:o}};s.isValid(this.callbacks.onProgress)&&this.callbacks.onProgress(r),this.logging.enabled&&this.logging.debug&&console.debug(a)},e.prototype._onError=function(e){var t="Error occurred while downloading!";throw e.currentTarget&&null!==e.currentTarget.statusText&&(t+="\nurl: "+e.currentTarget.responseURL+"\nstatus: "+e.currentTarget.statusText),this.onProgress("error",t,-1),t},e.prototype.load=function(e,t,s,o,a,r){var i=new THREE.LoaderSupport.ResourceDescriptor(e,"OBJ");this._loadObj(i,t,s,o,a,r)},e.prototype._loadObj=function(e,t,o,a,r,i){s.isValid(a)||(a=this._onError),s.isValid(e)||a("An invalid ResourceDescriptor was provided. Unable to continue!");var n=this,l=function(s){if(e.content=s,i)n.parseAsync(s,t);else{var o=new THREE.LoaderSupport.Callbacks;o.setCallbackOnMeshAlter(r),n._setCallbacks(o),t({detail:{loaderRootNode:n.parse(s),modelName:n.modelName,instanceNo:n.instanceNo}})}};if(!s.isValid(e.url)||s.isValid(e.content))l(s.isValid(e.content)?e.content:null);else{if(!s.isValid(o)){var u=0,h=0;o=function(t){if(t.lengthComputable&&(h=t.loaded/t.total)>u){u=h;var s='Download of "'+e.url+'": '+(100*h).toFixed(2)+"%";n.onProgress("progressLoad",s,h)}}}var c=new THREE.FileLoader(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.load(e.url,l,o,a)}},e.prototype.run=function(e,t){this._applyPrepData(e);var o=e.checkResourceDescriptorFiles(e.resources,[{ext:"obj",type:"ArrayBuffer",ignore:!1},{ext:"mtl",type:"String",ignore:!1},{ext:"zip",type:"String",ignore:!0}]);s.isValid(t)&&(this.terminateWorkerOnLoad=!1,this.workerSupport=t,this.logging.enabled=this.workerSupport.logging.enabled,this.logging.debug=this.workerSupport.logging.debug);var a=this;this._loadMtl(o.mtl,function(t){null!==t&&a.meshBuilder.setMaterials(t),a._loadObj(o.obj,a.callbacks.onLoad,null,null,a.callbacks.onMeshAlter,e.useAsync)},e.crossOrigin,e.materialOptions)},e.prototype._applyPrepData=function(e){s.isValid(e)&&(this.setLogging(e.logging.enabled,e.logging.debug),this.setModelName(e.modelName),this.setStreamMeshesTo(e.streamMeshesTo),this.meshBuilder.setMaterials(e.materials),this.setUseIndices(e.useIndices),this.setDisregardNormals(e.disregardNormals),this.setMaterialPerSmoothingGroup(e.materialPerSmoothingGroup),this._setCallbacks(e.getCallbacks()))},e.prototype.parse=function(e){if(!s.isValid(e))return console.warn("Provided content is not a valid ArrayBuffer or String."),this.loaderRootNode;this.logging.enabled&&console.time("OBJLoader2 parse: "+this.modelName),this.meshBuilder.init();var t=new o;t.setLogging(this.logging.enabled,this.logging.debug),t.setMaterialPerSmoothingGroup(this.materialPerSmoothingGroup),t.setUseIndices(this.useIndices),t.setDisregardNormals(this.disregardNormals),t.setMaterials(this.meshBuilder.getMaterials());var a=this;t.setCallbackMeshBuilder(function(e){var t,s=a.meshBuilder.processPayload(e);for(var o in s)t=s[o],a.loaderRootNode.add(t)});if(t.setCallbackProgress(function(e,t){a.onProgress("progressParse",e,t)}),e instanceof ArrayBuffer||e instanceof Uint8Array)this.logging.enabled&&console.info("Parsing arrayBuffer..."),t.parse(e);else{if(!("string"==typeof e||e instanceof String))throw"Provided content was neither of type String nor Uint8Array! Aborting...";this.logging.enabled&&console.info("Parsing text..."),t.parseText(e)}return this.logging.enabled&&console.timeEnd("OBJLoader2 parse: "+this.modelName),this.loaderRootNode},e.prototype.parseAsync=function(e,t){var a=this,r=!1,i=function(){t({detail:{loaderRootNode:a.loaderRootNode,modelName:a.modelName,instanceNo:a.instanceNo}}),r&&a.logging.enabled&&console.timeEnd("OBJLoader2 parseAsync: "+a.modelName)};s.isValid(e)?r=!0:(console.warn("Provided content is not a valid ArrayBuffer."),i()),r&&this.logging.enabled&&console.time("OBJLoader2 parseAsync: "+this.modelName),this.meshBuilder.init();this.workerSupport.validate(function(e,t){var a="";return a+="/**\n",a+="  * This code was constructed by OBJLoader2 buildCode.\n",a+="  */\n\n",a+="THREE = { LoaderSupport: {} };\n\n",a+=e("THREE.LoaderSupport.Validator",s),a+=t("Parser",o)},"Parser"),this.workerSupport.setCallbacks(function(e){var t,s=a.meshBuilder.processPayload(e);for(var o in s)t=s[o],a.loaderRootNode.add(t)},i),a.terminateWorkerOnLoad&&this.workerSupport.setTerminateRequested(!0);var n={},l=this.meshBuilder.getMaterials();for(var u in l)n[u]=u;this.workerSupport.run({params:{useAsync:!0,materialPerSmoothingGroup:this.materialPerSmoothingGroup,useIndices:this.useIndices,disregardNormals:this.disregardNormals},logging:{enabled:this.logging.enabled,debug:this.logging.debug},materials:{materials:n},data:{input:e,options:null}})};var o=function(){function e(){this.callbackProgress=null,this.callbackMeshBuilder=null,this.contentRef=null,this.legacyMode=!1,this.materials={},this.useAsync=!1,this.materialPerSmoothingGroup=!1,this.useIndices=!1,this.disregardNormals=!1,this.vertices=[],this.colors=[],this.normals=[],this.uvs=[],this.rawMesh={objectName:"",groupName:"",activeMtlName:"",mtllibName:"",faceType:-1,subGroups:[],subGroupInUse:null,smoothingGroup:{splitMaterials:!1,normalized:-1,real:-1},counts:{doubleIndicesCount:0,faceCount:0,mtlCount:0,smoothingGroupCount:0}},this.inputObjectCount=1,this.outputObjectCount=1,this.globalCounts={vertices:0,faces:0,doubleIndicesCount:0,lineByte:0,currentByte:0,totalBytes:0},this.logging={enabled:!0,debug:!1}}return e.prototype.resetRawMesh=function(){this.rawMesh.subGroups=[],this.rawMesh.subGroupInUse=null,this.rawMesh.smoothingGroup.normalized=-1,this.rawMesh.smoothingGroup.real=-1,this.pushSmoothingGroup(1),this.rawMesh.counts.doubleIndicesCount=0,this.rawMesh.counts.faceCount=0,this.rawMesh.counts.mtlCount=0,this.rawMesh.counts.smoothingGroupCount=0},e.prototype.setUseAsync=function(e){this.useAsync=e},e.prototype.setMaterialPerSmoothingGroup=function(e){this.materialPerSmoothingGroup=e},e.prototype.setUseIndices=function(e){this.useIndices=e},e.prototype.setDisregardNormals=function(e){this.disregardNormals=e},e.prototype.setMaterials=function(e){this.materials=THREE.LoaderSupport.Validator.verifyInput(e,this.materials),this.materials=THREE.LoaderSupport.Validator.verifyInput(this.materials,{})},e.prototype.setCallbackMeshBuilder=function(e){if(!THREE.LoaderSupport.Validator.isValid(e))throw'Unable to run as no "MeshBuilder" callback is set.';this.callbackMeshBuilder=e},e.prototype.setCallbackProgress=function(e){this.callbackProgress=e},e.prototype.setLogging=function(e,t){this.logging.enabled=!0===e,this.logging.debug=!0===t},e.prototype.configure=function(){if(this.pushSmoothingGroup(1),this.logging.enabled){var e=Object.keys(this.materials),t="OBJLoader2.Parser configuration:"+(e.length>0?"\n\tmaterialNames:\n\t\t- "+e.join("\n\t\t- "):"\n\tmaterialNames: None")+"\n\tuseAsync: "+this.useAsync+"\n\tmaterialPerSmoothingGroup: "+this.materialPerSmoothingGroup+"\n\tuseIndices: "+this.useIndices+"\n\tdisregardNormals: "+this.disregardNormals+"\n\tcallbackMeshBuilderName: "+this.callbackMeshBuilder.name+"\n\tcallbackProgressName: "+this.callbackProgress.name;console.info(t)}},e.prototype.parse=function(e){this.logging.enabled&&console.time("OBJLoader2.Parser.parse"),this.configure();var t=new Uint8Array(e);this.contentRef=t;var s=t.byteLength;this.globalCounts.totalBytes=s;for(var o,a=new Array(128),r="",i=0,n=0,l=0;l<s;l++)switch(o=t[l]){case 32:r.length>0&&(a[i++]=r),r="";break;case 47:r.length>0&&(a[i++]=r),n++,r="";break;case 10:r.length>0&&(a[i++]=r),r="",this.globalCounts.lineByte=this.globalCounts.currentByte,this.globalCounts.currentByte=l,this.processLine(a,i,n),i=0,n=0;break;case 13:break;default:r+=String.fromCharCode(o)}this.finalizeParsing(),this.logging.enabled&&console.timeEnd("OBJLoader2.Parser.parse")},e.prototype.parseText=function(e){this.logging.enabled&&console.time("OBJLoader2.Parser.parseText"),this.configure(),this.legacyMode=!0,this.contentRef=e;var t=e.length;this.globalCounts.totalBytes=t;for(var s,o=new Array(128),a="",r=0,i=0,n=0;n<t;n++)switch(s=e[n]){case" ":a.length>0&&(o[r++]=a),a="";break;case"/":a.length>0&&(o[r++]=a),i++,a="";break;case"\n":a.length>0&&(o[r++]=a),a="",this.globalCounts.lineByte=this.globalCounts.currentByte,this.globalCounts.currentByte=n,this.processLine(o,r,i),r=0,i=0;break;case"\r":break;default:a+=s}this.finalizeParsing(),this.logging.enabled&&console.timeEnd("OBJLoader2.Parser.parseText")},e.prototype.processLine=function(e,t,s){if(!(t<1)){var o,a,r,i,n=function(e,t,s,o){var a="";if(o>s){var r;if(t)for(r=s;r<o;r++)a+=e[r];else for(r=s;r<o;r++)a+=String.fromCharCode(e[r]);a=a.trim()}return a};switch(i=e[0]){case"v":this.vertices.push(parseFloat(e[1])),this.vertices.push(parseFloat(e[2])),this.vertices.push(parseFloat(e[3])),t>4&&(this.colors.push(parseFloat(e[4])),this.colors.push(parseFloat(e[5])),this.colors.push(parseFloat(e[6])));break;case"vt":this.uvs.push(parseFloat(e[1])),this.uvs.push(parseFloat(e[2]));break;case"vn":this.normals.push(parseFloat(e[1])),this.normals.push(parseFloat(e[2])),this.normals.push(parseFloat(e[3]));break;case"f":if(o=t-1,0===s)for(this.checkFaceType(0),r=2,a=o;r<a;r++)this.buildFace(e[1]),this.buildFace(e[r]),this.buildFace(e[r+1]);else if(o===2*s)for(this.checkFaceType(1),r=3,a=o-2;r<a;r+=2)this.buildFace(e[1],e[2]),this.buildFace(e[r],e[r+1]),this.buildFace(e[r+2],e[r+3]);else if(2*o==3*s)for(this.checkFaceType(2),r=4,a=o-3;r<a;r+=3)this.buildFace(e[1],e[2],e[3]),this.buildFace(e[r],e[r+1],e[r+2]),this.buildFace(e[r+3],e[r+4],e[r+5]);else for(this.checkFaceType(3),r=3,a=o-2;r<a;r+=2)this.buildFace(e[1],void 0,e[2]),this.buildFace(e[r],void 0,e[r+1]),this.buildFace(e[r+2],void 0,e[r+3]);break;case"l":case"p":if((o=t-1)==2*s)for(this.checkFaceType(4),r=1,a=o+1;r<a;r+=2)this.buildFace(e[r],e[r+1]);else for(this.checkFaceType("l"===i?5:6),r=1,a=o+1;r<a;r++)this.buildFace(e[r]);break;case"s":this.pushSmoothingGroup(e[1]);break;case"g":this.processCompletedMesh(),this.rawMesh.groupName=n(this.contentRef,this.legacyMode,this.globalCounts.lineByte+2,this.globalCounts.currentByte);break;case"o":this.rawMesh.objectName=n(this.contentRef,this.legacyMode,this.globalCounts.lineByte+2,this.globalCounts.currentByte);break;case"mtllib":this.rawMesh.mtllibName=n(this.contentRef,this.legacyMode,this.globalCounts.lineByte+7,this.globalCounts.currentByte);break;case"usemtl":var l=n(this.contentRef,this.legacyMode,this.globalCounts.lineByte+7,this.globalCounts.currentByte);""!==l&&this.rawMesh.activeMtlName!==l&&(this.rawMesh.activeMtlName=l,this.rawMesh.counts.mtlCount++,this.checkSubGroup())}}},e.prototype.pushSmoothingGroup=function(e){var t=parseInt(e);isNaN(t)&&(t="off"===e?0:1);var s=this.rawMesh.smoothingGroup.normalized;this.rawMesh.smoothingGroup.normalized=this.rawMesh.smoothingGroup.splitMaterials?t:0===t?0:1,this.rawMesh.smoothingGroup.real=t,s!==t&&(this.rawMesh.counts.smoothingGroupCount++,this.checkSubGroup())},e.prototype.checkFaceType=function(e){this.rawMesh.faceType!==e&&(this.processCompletedMesh(),this.rawMesh.faceType=e,this.checkSubGroup())},e.prototype.checkSubGroup=function(){var e=this.rawMesh.activeMtlName+"|"+this.rawMesh.smoothingGroup.normalized;this.rawMesh.subGroupInUse=this.rawMesh.subGroups[e],THREE.LoaderSupport.Validator.isValid(this.rawMesh.subGroupInUse)||(this.rawMesh.subGroupInUse={index:e,objectName:this.rawMesh.objectName,groupName:this.rawMesh.groupName,materialName:this.rawMesh.activeMtlName,smoothingGroup:this.rawMesh.smoothingGroup.normalized,vertices:[],indexMappingsCount:0,indexMappings:[],indices:[],colors:[],uvs:[],normals:[]},this.rawMesh.subGroups[e]=this.rawMesh.subGroupInUse)},e.prototype.buildFace=function(e,t,s){this.disregardNormals&&(s=void 0);var o=this,a=function(){var a=parseInt(e),r=3*(a>0?a-1:a+o.vertices.length/3),i=o.rawMesh.subGroupInUse.vertices;i.push(o.vertices[r++]),i.push(o.vertices[r++]),i.push(o.vertices[r]);var n=o.colors.length>0?r:null;if(null!==n){var l=o.rawMesh.subGroupInUse.colors;l.push(o.colors[n++]),l.push(o.colors[n++]),l.push(o.colors[n])}if(t){var u=parseInt(t),h=2*(u>0?u-1:u+o.uvs.length/2),c=o.rawMesh.subGroupInUse.uvs;c.push(o.uvs[h++]),c.push(o.uvs[h])}if(s){var d=parseInt(s),p=3*(d>0?d-1:d+o.normals.length/3),g=o.rawMesh.subGroupInUse.normals;g.push(o.normals[p++]),g.push(o.normals[p++]),g.push(o.normals[p])}};if(this.useIndices){var r=e+(t?"_"+t:"_n")+(s?"_"+s:"_n"),i=this.rawMesh.subGroupInUse.indexMappings[r];THREE.LoaderSupport.Validator.isValid(i)?this.rawMesh.counts.doubleIndicesCount++:(i=this.rawMesh.subGroupInUse.vertices.length/3,a(),this.rawMesh.subGroupInUse.indexMappings[r]=i,this.rawMesh.subGroupInUse.indexMappingsCount++),this.rawMesh.subGroupInUse.indices.push(i)}else a();this.rawMesh.counts.faceCount++},e.prototype.createRawMeshReport=function(e){return"Input Object number: "+e+"\n\tObject name: "+this.rawMesh.objectName+"\n\tGroup name: "+this.rawMesh.groupName+"\n\tMtllib name: "+this.rawMesh.mtllibName+"\n\tVertex count: "+this.vertices.length/3+"\n\tNormal count: "+this.normals.length/3+"\n\tUV count: "+this.uvs.length/2+"\n\tSmoothingGroup count: "+this.rawMesh.counts.smoothingGroupCount+"\n\tMaterial count: "+this.rawMesh.counts.mtlCount+"\n\tReal MeshOutputGroup count: "+this.rawMesh.subGroups.length},e.prototype.finalizeRawMesh=function(){var e,t,s=[],o=0,a=0,r=0,i=0,n=0,l=0;for(var u in this.rawMesh.subGroups)if((e=this.rawMesh.subGroups[u]).vertices.length>0){if((t=e.indices).length>0&&a>0)for(var h in t)t[h]=t[h]+a;s.push(e),o+=e.vertices.length,a+=e.indexMappingsCount,r+=e.indices.length,i+=e.colors.length,l+=e.uvs.length,n+=e.normals.length}var c=null;return s.length>0&&(c={name:""!==this.rawMesh.groupName?this.rawMesh.groupName:this.rawMesh.objectName,subGroups:s,absoluteVertexCount:o,absoluteIndexCount:r,absoluteColorCount:i,absoluteNormalCount:n,absoluteUvCount:l,faceCount:this.rawMesh.counts.faceCount,doubleIndicesCount:this.rawMesh.counts.doubleIndicesCount}),c},e.prototype.processCompletedMesh=function(){var e=this.finalizeRawMesh();if(THREE.LoaderSupport.Validator.isValid(e)){if(this.colors.length>0&&this.colors.length!==this.vertices.length)throw"Vertex Colors were detected, but vertex count and color count do not match!";this.logging.enabled&&this.logging.debug&&console.debug(this.createRawMeshReport(this.inputObjectCount)),this.inputObjectCount++,this.buildMesh(e);var t=this.globalCounts.currentByte/this.globalCounts.totalBytes;return this.callbackProgress("Completed [o: "+this.rawMesh.objectName+" g:"+this.rawMesh.groupName+"] Total progress: "+(100*t).toFixed(2)+"%",t),this.resetRawMesh(),!0}return!1},e.prototype.buildMesh=function(e){var t=e.subGroups,s=new Float32Array(e.absoluteVertexCount);this.globalCounts.vertices+=e.absoluteVertexCount/3,this.globalCounts.faces+=e.faceCount,this.globalCounts.doubleIndicesCount+=e.doubleIndicesCount;var o,a,r,i,n,l,u,h=e.absoluteIndexCount>0?new Uint32Array(e.absoluteIndexCount):null,c=e.absoluteColorCount>0?new Float32Array(e.absoluteColorCount):null,d=e.absoluteNormalCount>0?new Float32Array(e.absoluteNormalCount):null,p=e.absoluteUvCount>0?new Float32Array(e.absoluteUvCount):null,g=THREE.LoaderSupport.Validator.isValid(c),m=[],b=t.length>1,f=0,M=[],y=[],v=0,w=0,C=0,N=0,E=0,k=0,L=0;for(var T in t)if(t.hasOwnProperty(T)){if(o=t[T],u=o.materialName,l=this.rawMesh.faceType<4?u+(g?"_vertexColor":"")+(0===o.smoothingGroup?"_flat":""):6===this.rawMesh.faceType?"defaultPointMaterial":"defaultLineMaterial",i=this.materials[u],n=this.materials[l],!THREE.LoaderSupport.Validator.isValid(i)&&!THREE.LoaderSupport.Validator.isValid(n)){var R=g?"defaultVertexColorMaterial":"defaultMaterial";i=this.materials[R],this.logging.enabled&&console.warn('object_group "'+o.objectName+"_"+o.groupName+'" was defined with unresolvable material "'+u+'"! Assigning "'+R+'".'),(u=R)===l&&(n=i,l=R)}if(!THREE.LoaderSupport.Validator.isValid(n)){var G={materialNameOrg:u,materialName:l,materialProperties:{vertexColors:g?2:0,flatShading:0===o.smoothingGroup}},S={cmd:"materialData",materials:{materialCloneInstructions:G}};this.callbackMeshBuilder(S),this.useAsync&&(this.materials[l]=G)}if(b?((a=M[l])||(a=f,M[l]=f,m.push(l),f++),r={start:k,count:L=this.useIndices?o.indices.length:o.vertices.length/3,index:a},y.push(r),k+=L):m.push(l),s.set(o.vertices,v),v+=o.vertices.length,h&&(h.set(o.indices,w),w+=o.indices.length),c&&(c.set(o.colors,C),C+=o.colors.length),d&&(d.set(o.normals,N),N+=o.normals.length),p&&(p.set(o.uvs,E),E+=o.uvs.length),this.logging.enabled&&this.logging.debug){var B=THREE.LoaderSupport.Validator.isValid(a)?"\n\t\tmaterialIndex: "+a:"",V="\tOutput Object no.: "+this.outputObjectCount+"\n\t\tgroupName: "+o.groupName+"\n\t\tIndex: "+o.index+"\n\t\tfaceType: "+this.rawMesh.faceType+"\n\t\tmaterialName: "+o.materialName+"\n\t\tsmoothingGroup: "+o.smoothingGroup+B+"\n\t\tobjectName: "+o.objectName+"\n\t\t#vertices: "+o.vertices.length/3+"\n\t\t#indices: "+o.indices.length+"\n\t\t#colors: "+o.colors.length/3+"\n\t\t#uvs: "+o.uvs.length/2+"\n\t\t#normals: "+o.normals.length/3;console.debug(V)}}this.outputObjectCount++,this.callbackMeshBuilder({cmd:"meshData",progress:{numericalValue:this.globalCounts.currentByte/this.globalCounts.totalBytes},params:{meshName:e.name},materials:{multiMaterial:b,materialNames:m,materialGroups:y},buffers:{vertices:s,indices:h,colors:c,normals:d,uvs:p},geometryType:this.rawMesh.faceType<4?0:6===this.rawMesh.faceType?2:1},[s.buffer],THREE.LoaderSupport.Validator.isValid(h)?[h.buffer]:null,THREE.LoaderSupport.Validator.isValid(c)?[c.buffer]:null,THREE.LoaderSupport.Validator.isValid(d)?[d.buffer]:null,THREE.LoaderSupport.Validator.isValid(p)?[p.buffer]:null)},e.prototype.finalizeParsing=function(){if(this.logging.enabled&&console.info("Global output object count: "+this.outputObjectCount),this.processCompletedMesh()&&this.logging.enabled){var e="Overall counts: \n\tVertices: "+this.globalCounts.vertices+"\n\tFaces: "+this.globalCounts.faces+"\n\tMultiple definitions: "+this.globalCounts.doubleIndicesCount;console.info(e)}},e}();return e.prototype.loadMtl=function(e,t,s,o,a){var r=new THREE.LoaderSupport.ResourceDescriptor(e,"MTL");r.setContent(t),this._loadMtl(r,s,o,a)},e.prototype._loadMtl=function(e,t,o,a){void 0===THREE.MTLLoader&&console.error('"THREE.MTLLoader" is not available. "THREE.OBJLoader2" requires it for loading MTL files.'),s.isValid(e)&&this.logging.enabled&&console.time("Loading MTL: "+e.name);var r=[],i=this,n=function(o){var a=[];if(s.isValid(o)){o.preload(),a=o.materials;for(var n in a)a.hasOwnProperty(n)&&(r[n]=a[n])}s.isValid(e)&&i.logging.enabled&&console.timeEnd("Loading MTL: "+e.name),t(r,o)};if(s.isValid(e)&&(s.isValid(e.content)||s.isValid(e.url))){var l=new THREE.MTLLoader(this.manager);o=s.verifyInput(o,"anonymous"),l.setCrossOrigin(o),l.setPath(e.path),s.isValid(a)&&l.setMaterialOptions(a),s.isValid(e.content)?n(s.isValid(e.content)?l.parse(e.content):null):s.isValid(e.url)&&new THREE.FileLoader(this.manager).load(e.url,function(t){e.content=t,n(l.parse(t))},this._onProgress,this._onError)}else n()},e}();